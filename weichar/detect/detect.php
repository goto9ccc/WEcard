<?php

define( 'WORD_WIDTH', 25 );
define( 'WORD_HIGHT', 23 );
define( 'OFFSET_X', 10 );
define( 'OFFSET_Y', 36 );
define( 'WORD_SPACING', 13 );

class valite
{
    public function setImage($Image)
    {
        $this->ImagePath = $Image;
    }

    public function getData()
    {
        return $data;
    }

    public function getResult()
    {
        return $DataArray;
    }

    public function getHec()
    {
        $res = imagecreatefromjpeg($this->ImagePath);
        $size = getimagesize($this->ImagePath);
        $data = array();
        for ($i = 0; $i < $size[1]; ++$i) {
            for ($j = 0; $j < $size[0]; ++$j) {
                $rgb = imagecolorat($res, $j, $i);
                $rgbarray = imagecolorsforindex($res, $rgb);
                if ( $rgbarray['red'] < 30 || $rgbarray['green'] < 30 || $rgbarray['blue'] < 30 ) {
                    $data[$i][$j] = 1;
                    //echo '1';
                }
                else {
                    $data[$i][$j] = 0;
                    // echo '0';
                }
            }
            //echo "<br>";
        }
        $this->DataArray = $data;
        $this->ImageSize = $size;
    }

    public function getCode()
    {
        $k = 0;
        for ($j = 0; $j < 4; ++$j) {
            for ($i = 0; $i < 3; ++$i) {
                $demo = '';
                $x = ( $i * ( WORD_WIDTH + WORD_SPACING ) ) + OFFSET_X;
                $y = OFFSET_Y + $j * ( WORD_SPACING + WORD_HIGHT );
                for ($h = $y; $h < ( $y + WORD_HIGHT ); ++$h) {
                    for ($w = $x; $w < ( $x + WORD_WIDTH ); ++$w) {
                        $demo .= $this->DataArray[$h][$w];
                        //echo $this->DataArray[$h][$w];
                    }
                    //   echo '<br>';
                }
                //echo '<br>';

                //echo "'$k'=>'".$demo."',<br>";
                $k += 1;
            }
        }
    }

    public function run()
    {
        $result = "";
        $data = array("", "", "", "");
        $k = 0;
        for ($j = 0; $j < 4; ++$j) {
            for ($i = 0; $i < 3; ++$i) {
                $x = ( $i * ( WORD_WIDTH + WORD_SPACING ) ) + OFFSET_X;
                $y = OFFSET_Y + $j * ( WORD_SPACING + WORD_HIGHT );
                for ($h = $y; $h < ( $y + WORD_HIGHT ); ++$h) {
                    for ($w = $x; $w < ( $x + WORD_WIDTH ); ++$w) {
                        $data[$k] .= $this->DataArray[$h][$w];
                    }
                }
                $k += 1;
            }
        }


        foreach ($data as $numKey => $numString) {
            $max = 0.0;
            $num = 0;
            foreach ($this->Keys as $key => $value) {
                $percent = 0.0;
                similar_text($value, $numString, $percent);
                if ( intval($percent) > $max ) {
                    $max = $percent;
                    $num = $key;
                    if ( intval($percent) > 99 ) {
                        break;
                    }
                }
            }
            $result .= $num;
        }
        $this->data = $result;

        return $result;
    }

    public function Draw()
    {
        for ($i = 0; $i < $this->ImageSize[1]; ++$i) {
            for ($j = 0; $j < $this->ImageSize[0]; ++$j) {
                echo $this->DataArray[$i][$j];
            }
            echo "\n";
        }
    }

    public function __construct()
    {
        $this->Keys = array
    }

    protected $ImagePath;
    protected $DataArray;
    protected $ImageSize;
    protected $data;
    protected $Keys;
    protected $NumStringArray;
}

?>